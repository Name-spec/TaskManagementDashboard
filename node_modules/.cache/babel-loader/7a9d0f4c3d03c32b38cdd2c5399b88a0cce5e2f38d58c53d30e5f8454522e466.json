{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\p c\\\\Desktop\\\\Project\\\\Task Management Dashboard\\\\src\\\\components\\\\ButtonGrid\\\\ButtonGrid.js\";\nimport React from 'react';\nimport styles from './ButtonGrid.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ButtonGrid() {\n  const buttons = [{\n    text: 'Customer Manager',\n    type: 'normal'\n  }, {\n    text: 'Task Manager',\n    type: 'normal'\n  }, {\n    text: 'Inspection Manager',\n    type: 'normal'\n  }, {\n    text: 'Task Map',\n    type: 'normal'\n  }, {\n    text: 'Quick Lookup',\n    type: 'normal'\n  }, {\n    text: 'My Task',\n    type: 'normal'\n  }, {\n    text: 'My Inspection',\n    type: 'normal'\n  }, {\n    text: 'Inspection Map',\n    type: 'normal'\n  }, {\n    text: 'Scan QR Code',\n    type: 'normal'\n  }, {\n    text: 'My Task History',\n    type: 'normal'\n  }, {\n    text: 'My Inspection History',\n    type: 'normal'\n  }, {\n    text: 'Asset Map',\n    type: 'normal'\n  }, {\n    text: 'Service Call',\n    type: 'action'\n  }, {\n    text: 'Emergency Service Call',\n    type: 'action'\n  }, {\n    text: 'Add New Customer',\n    type: 'action'\n  }, {\n    text: 'Customer Asset Manager',\n    type: 'action'\n  }, {\n    text: 'Future Use',\n    type: 'action'\n  }, {\n    text: 'Add New Button',\n    type: 'action'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.ButtonGrid,\n    children: buttons.map((button, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `grid-button ${button.type}`,\n      children: button.text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = ButtonGrid;\nexport default ButtonGrid;\nvar _c;\n$RefreshReg$(_c, \"ButtonGrid\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","ButtonGrid","buttons","text","type","className","children","map","button","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/p c/Desktop/Project/Task Management Dashboard/src/components/ButtonGrid/ButtonGrid.js"],"sourcesContent":["import React from 'react';\r\nimport styles from './ButtonGrid.module.css';\r\n\r\nfunction ButtonGrid() {\r\n  const buttons = [\r\n    { text: 'Customer Manager', type: 'normal' },\r\n    { text: 'Task Manager', type: 'normal' },\r\n    { text: 'Inspection Manager', type: 'normal' },\r\n    { text: 'Task Map', type: 'normal' },\r\n    { text: 'Quick Lookup', type: 'normal' },\r\n    { text: 'My Task', type: 'normal' },\r\n    { text: 'My Inspection', type: 'normal' },\r\n    { text: 'Inspection Map', type: 'normal' },\r\n    { text: 'Scan QR Code', type: 'normal' },\r\n    { text: 'My Task History', type: 'normal' },\r\n    { text: 'My Inspection History', type: 'normal' },\r\n    { text: 'Asset Map', type: 'normal' },\r\n    { text: 'Service Call', type: 'action' },\r\n    { text: 'Emergency Service Call', type: 'action' },\r\n    { text: 'Add New Customer', type: 'action' },\r\n    { text: 'Customer Asset Manager', type: 'action' },\r\n    { text: 'Future Use', type: 'action' },\r\n    { text: 'Add New Button', type: 'action' },\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.ButtonGrid}>\r\n      {buttons.map((button, index) => (\r\n        <button \r\n          key={index} \r\n          className={`grid-button ${button.type}`}\r\n        >\r\n          {button.text}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonGrid;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,UAAUA,CAAA,EAAG;EACpB,MAAMC,OAAO,GAAG,CACd;IAAEC,IAAI,EAAE,kBAAkB;IAAEC,IAAI,EAAE;EAAS,CAAC,EAC5C;IAAED,IAAI,EAAE,cAAc;IAAEC,IAAI,EAAE;EAAS,CAAC,EACxC;IAAED,IAAI,EAAE,oBAAoB;IAAEC,IAAI,EAAE;EAAS,CAAC,EAC9C;IAAED,IAAI,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAS,CAAC,EACpC;IAAED,IAAI,EAAE,cAAc;IAAEC,IAAI,EAAE;EAAS,CAAC,EACxC;IAAED,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAS,CAAC,EACnC;IAAED,IAAI,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAS,CAAC,EACzC;IAAED,IAAI,EAAE,gBAAgB;IAAEC,IAAI,EAAE;EAAS,CAAC,EAC1C;IAAED,IAAI,EAAE,cAAc;IAAEC,IAAI,EAAE;EAAS,CAAC,EACxC;IAAED,IAAI,EAAE,iBAAiB;IAAEC,IAAI,EAAE;EAAS,CAAC,EAC3C;IAAED,IAAI,EAAE,uBAAuB;IAAEC,IAAI,EAAE;EAAS,CAAC,EACjD;IAAED,IAAI,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAS,CAAC,EACrC;IAAED,IAAI,EAAE,cAAc;IAAEC,IAAI,EAAE;EAAS,CAAC,EACxC;IAAED,IAAI,EAAE,wBAAwB;IAAEC,IAAI,EAAE;EAAS,CAAC,EAClD;IAAED,IAAI,EAAE,kBAAkB;IAAEC,IAAI,EAAE;EAAS,CAAC,EAC5C;IAAED,IAAI,EAAE,wBAAwB;IAAEC,IAAI,EAAE;EAAS,CAAC,EAClD;IAAED,IAAI,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAS,CAAC,EACtC;IAAED,IAAI,EAAE,gBAAgB;IAAEC,IAAI,EAAE;EAAS,CAAC,CAC3C;EAED,oBACEJ,OAAA;IAAKK,SAAS,EAAEP,MAAM,CAACG,UAAW;IAAAK,QAAA,EAC/BJ,OAAO,CAACK,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBT,OAAA;MAEEK,SAAS,EAAE,eAAeG,MAAM,CAACJ,IAAI,EAAG;MAAAE,QAAA,EAEvCE,MAAM,CAACL;IAAI,GAHPM,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIJ,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GAlCQb,UAAU;AAoCnB,eAAeA,UAAU;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}